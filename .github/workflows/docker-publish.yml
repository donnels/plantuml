name: Docker
on:
  push:
    paths:
      - 'docker/**'
      - '.github/workflows/docker-publish.yml'
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # platforms to build for
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v6

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2.4.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2   
        with:
          install: false
        
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
          
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3.0.0
        with:
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}

#      - name: run container against this repo
#        run: |
#          echo "$container"
#          docker pull $container
#          docker run -v "$PWD":/documents/ --name asciidoc-to-pdf $container asciidoctor-pdf -D /documents/docs *.asciidoc
#          docker run -v "$PWD":/documents/ --name asciidoc-to-html $container asciidoctor -D /documents/docs *.asciidoc
#        env:
#          container: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign --help
          cosign sign --help
          #cosign sign --force ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}

#      - name: Check for modified files
#        id: git-check
#        run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)
#        
#      - name: Update changes in GitHub repository
#        if: steps.git-check.outputs.modified == 'true'
#        run:  |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add .
#          git commit -m '[automated commit] push changed files from actions'
#          git push
